name: 'app-pipeline'

on:
  push:
  pull_request:

permissions:
  contents: write
  packages: write
  id-token: write

jobs:
  test:
    strategy:
      matrix:
        go-version: [1.18.x]
        platform: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set Up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: Cache Go Dependencies
        id: cache-go
        uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.go-version }}-

      - name: Install Dependencies
        if: steps.cache-go.outputs.cache-hit != 'true'
        run: make bootstrap

      - name: Run Static Analysis
        run: make lint

      - name: Run Tests
        run: make test

  build-artifacts:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set Up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.18.x'

      - name: Cache Go Dependencies
        id: cache-go
        uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-prod-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-prod-

      - name: Install Dependencies
        if: steps.cache-go.outputs.cache-hit != 'true'
        run: make bootstrap

      - name: Build Snapshot Artifacts
        run: make ci-build-snapshot-packages

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: artifacts
          path: dist

  test-artifacts:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    needs: build-artifacts
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set Up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.18.x'

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: artifacts
          path: dist

      - name: Run Tests
        run: |
          if [[ "$RUNNER_OS" == "Linux" ]]; then
            make ci-test-linux-run && make ci-plugs-out-test
          elif [[ "$RUNNER_OS" == "macOS" ]]; then
            make ci-test-mac-run
          else
            make ci-test-windows-run
          fi
        shell: bash

  release:
    runs-on: ubuntu-latest
    needs: test-artifacts
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set Up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.18.x'

      - name: Cache Go Dependencies
        id: cache-go
        uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-prod-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-prod-

      - name: Install Dependencies
        if: steps.cache-go.outputs.cache-hit != 'true'
        run: make bootstrap

      - name: Publish GitHub Release
        run: make ci-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
